@model CryptoAPIResponseViewModelForMarketsFilter
@using CryptoCoin.SolutionCore.ViewModels;

@{
    ViewBag.Title = "CryptoCoin";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //string baseUrl = Request.Url.Scheme + "://" + Request.Url.DnsSafeHost + Request.ApplicationPath.TrimEnd('/') + "/";
}


<div class="x_panel">
    <div class="x_title">
        <h2>@ViewBag.Title</h2>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
            </li>
        </ul>
        <div class="clearfix"></div>
    </div>

    <div class="x_content">
        <div class="row">

            <div class="col-md-12 col-xs-12">
                @Html.ValidationSummary(true)
                @Html.AntiForgeryToken()

                <div class="row">
                    <div class="col-md-5 col-xs-6">
                        <div class="form-group">
                            <label for="trade" class="col-md-1 col-xs-2 control-label text-right">Trade</label>
                            <div class="col-md-7 col-xs-10 ">
                                @Html.DropDownList("TradeCoin", (SelectList)ViewBag.TradeCoin, new { @class = "dropdown-toggle form-control ", @style = "max-width: inherit;text-align:left" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-5 col-xs-6">
                        <div class="form-group">
                            <label for="trade" class="col-md-1 col-xs-2 control-label text-right">To</label>
                            <div class="col-md-7 col-xs-10 ">
                                @Html.DropDownList("ToCoin", (SelectList)ViewBag.ToCoin, new { @class = "dropdown-toggle form-control ", @style = "max-width: inherit;text-align:left" })
                            </div>
                        </div>
                    </div>


                    <button id='RateCoinButton' data-toggle="modal" data-codcoin="10" class="RateCoinButton btn btn-success">Search</button>

                </div>
            </div>
            <br />
            <br />
            <div id="ConversionCoinContent" class="col-md-12 col-sm-12 col-xs-12">
            </div>
            <br />
        </div>


        <div class="col-md-12 col-sm-12 col-xs-12">
            <div id="PartialTable" class="col-md-12 col-sm-12 col-xs-12">
            </div>

        </div>

        <hr />
        <div class="col-md-12 col-xs-12" id="chartCoins">
            <div id="evolucao_moedas" style="height:450px;"></div>
        </div>
    </div>
</div>

<style type="text/css">

    #verde {
        color: green;
    }

    #azul {
        color: blue;
    }

    #preto {
        color: black;
    }
</style>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js" type="text/javascript"></script>
<script src="~/lib/Assets/Scripts/util.js"></script>
<script src="~/lib/Assets/Scripts/Chart.js"></script>
<script src="~/lib/Assets/Scripts/Echarts/echarts.min.js"></script>

<script type="text/javascript">

    $(document).on('click', '.RateCoinButton', function (e) {

        var objTrade = document.getElementById("TradeCoin");
        var valueSelectedTrade = objTrade.options[objTrade.selectedIndex].value


        var objTo = document.getElementById("ToCoin");
        var valueSelectedTo = objTo.options[objTo.selectedIndex].value


        if (objTrade != "") {
            $.get('Crypto/_PartialConversionCoin', { tradeId: valueSelectedTrade, toId: valueSelectedTo }, function (result) {
                $('#ConversionCoinContent').html(result);

            });

        }
        if (objTrade != "" && objTo !== "") {
            $.get('Crypto/_PartialTable', { tradeId: valueSelectedTrade, toId: valueSelectedTo }, function (result) {
                $('#PartialTable').html(result);


                var tabela = document.getElementById("PartialTable");
                var linhas = tabela.getElementsByTagName("tr");

                for (var i = 0; i < linhas.length; i++) {
                    var linha_ = linhas[i];
                    if (i == 1) {
                        linha_.bgColor = '#FF00AA';
                    }

                }

            });
        }

    });


//Charts

   

</script>